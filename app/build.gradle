buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:1.0.2'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs"
apply plugin: 'com.getkeepsafe.dexcount'
apply from: 'buildScripts/jacoco.gradle'

androidExtensions {
    experimental = true
}

android {
    signingConfigs {
        config {
            storeFile file('..\\app-keystore.jks')
            storePassword 'worklearnplay'
            keyAlias = 'com.acemirr.app'
            keyPassword 'worklearnplay'
        }
    }
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.acemirr.training_task_1"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 2
        versionName "1.0.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        setProperty("archivesBaseName", applicationId + "-v" + versionCode + "(" + versionName + ")")
    }

    buildTypes {
        debug {
            testCoverageEnabled true
            minifyEnabled false
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    sourceSets {
        main {
            res.srcDirs = [
                    'src/main/res',
                    'src/main/res-menu/',
                    'src/main/res-menu/grid',
                    'src/main/res-menu/list',
                    'src/main/res-menu/paging',
            ]
        }
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
    flavorDimensions "default"
    productFlavors {
        //sample for product flavor
        development {
            buildConfigField "String", "BASE_URL", "\"https://info-malang-batu.firebaseapp.com/\""
        }
        production {
            buildConfigField "String", "BASE_URL", "\"https://info-malang-batu.firebaseapp.com/\""
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        animationsDisabled true

        unitTests {
            includeAndroidResources = true
        }
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

//    testing
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

//    network
    implementation "com.github.kittinunf.fuel:fuel:$fuelVersion"
    implementation "com.github.kittinunf.fuel:fuel-android:$fuelVersion"
    implementation "com.github.kittinunf.fuel:fuel-coroutines:$fuelVersion"
    implementation "com.github.kittinunf.fuel:fuel-gson:$fuelVersion"
    implementation "com.google.code.gson:gson:$gsonVersion"


//    navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

//    lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.paging:paging-runtime:$pagingVersion"

//    coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutineVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineVersion"

//    scale
    implementation "com.intuit.ssp:ssp-android:$sspVersion"
    implementation "com.intuit.sdp:sdp-android:$sdpVersion"

//    other
    implementation "androidx.recyclerview:recyclerview:$rvVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "com.squareup.picasso:picasso:$picassoVersion"
    implementation "com.flaviofaria:kenburnsview:$kenBurnsVersion"
}

//project.afterEvaluate {
//    def buildTypes = android.buildTypes.collect { type -> type.name }
//    def productFlavors = android.productFlavors.collect { flavor -> flavor.name }
//    if (!productFlavors) productFlavors.add('')
//
//    productFlavors.each { productFlavorName ->
//        buildTypes.each { buildTypeName ->
//            def sourceName, sourcePath
//            if (!productFlavorName) {
//                sourceName = sourcePath = "${buildTypeName}"
//            } else {
//                sourceName = "${productFlavorName}${buildTypeName.capitalize()}"
//                sourcePath = "${productFlavorName}/${buildTypeName}"
//            }
//            def testTaskName = "test${sourceName.capitalize()}UnitTest"
//            task "create${sourceName.capitalize()}UnitTestCoverageReport"(type: JacocoReport, dependsOn: "$testTaskName") {
//                group = "Reporting"
//                description = "Generate Jacoco coverage reports on the ${sourceName.capitalize()} build."
//
//                reports {
//                    xml.enabled true
//                    html.enabled true
//                }
//                classDirectories.setFrom(
//                        fileTree(dir: "${project.buildDir}/tmp/kotlin-classes/${sourcePath}",
//                                excludes: ['**/R.class',
//                                           '**/BR.class',
//                                           // Remove Activity and application as they are dependent to Context
//                                           '**/*Activity.class',
//                                           '**/com/acemirr/training_task_1/ui/menu/grid/viewmodel/CustomGridDetailViewModelFactory.class',
//                                           '**/com/acemirr/training_task_1/ui/menu/list/viewmodel/CustomListDetailViewModelFactory.class',
//                                           '**/com/acemirr/training_task_1/ui/menu/paging/datasource/PagingDataSourceFactory.class',
//                                           // Remove View Utils
//                                           '**/com/acemirr/training_task_1/utils/AppExtensions.class',
//                                           '**/com/acemirr/training_task_1/utils/BindingExtensions.class',
//
//                                           '**/R$*.class',
//                                           '**/*$ViewInjector*.*',
//                                           '**/*$ViewBinder*.*',
//                                           '**/BuildConfig.*',
//                                           'android/**',
//                                           '**/Manifest*.*',
//                                           '**/*$Lambda$*.*', // Jacoco can not handle several "$" in class name.
//                                           '**/*$*$*.*' // Anonymous classes generated by kotlin
//                                ]
//                        )
//                )
//                sourceDirectories.setFrom(files(["src/main/kotlin",
//                                                 "src/$productFlavorName/kotlin",
//                                                 "src/$buildTypeName/kotlin"])
//                )
//                executionData.setFrom(
//                        files("${project.buildDir}/jacoco/${testTaskName}.exec")
//                )
//            }
//        }
//    }
//}